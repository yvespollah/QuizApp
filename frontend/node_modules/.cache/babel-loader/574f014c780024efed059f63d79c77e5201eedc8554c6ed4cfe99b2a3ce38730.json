{"ast":null,"code":"var _jsxFileName = \"/home/yves/Test/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      // Check if token exists in local storage\n      const token = localStorage.getItem('token');\n      if (token) {\n        // Set auth token header\n        setAuthToken(token);\n        try {\n          // Verify token by getting user data\n          const res = await axios.get('/users/profile/');\n          setUser(res.data);\n          setIsAuthenticated(true);\n        } catch (err) {\n          // Token is invalid\n          localStorage.removeItem('token');\n          setAuthToken(null);\n          setUser(null);\n          setIsAuthenticated(false);\n          setError('Session expired. Please log in again.');\n        }\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Set auth token for axios\n  const setAuthToken = token => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    try {\n      const res = await axios.post('/users/register/', userData);\n      return res.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async userData => {\n    try {\n      // Transform email to username for JWT authentication\n      const authData = {\n        username: userData.email,\n        // Send email as username\n        password: userData.password\n      };\n      console.log('Sending auth data:', authData);\n      const res = await axios.post('/token/', authData);\n\n      // Save token to local storage\n      localStorage.setItem('token', res.data.access);\n\n      // Set auth token in headers\n      setAuthToken(res.data.access);\n\n      // Get user data\n      const userRes = await axios.get('/users/profile/');\n      setUser(userRes.data);\n      setIsAuthenticated(true);\n      setError(null);\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response3, _err$response3$data;\n      console.error('Login error details:', (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    // Remove token from local storage\n    localStorage.removeItem('token');\n\n    // Remove auth token from headers\n    setAuthToken(null);\n\n    // Reset state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const res = await axios.put('/users/me/', userData);\n      setUser(res.data);\n      return res.data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || 'Profile update failed');\n      throw err;\n    }\n  };\n\n  // Clear errors\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      updateProfile,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n// Export context for use in components\n_s(AuthProvider, \"AaZCefjEQIISzggwPe9U62ieYJk=\");\n_c = AuthProvider;\nAuthContext.displayName = 'AuthContext';\nAuthProvider.context = AuthContext;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","checkLoggedIn","token","localStorage","getItem","setAuthToken","res","get","data","err","removeItem","defaults","headers","common","register","userData","post","_err$response","_err$response$data","response","detail","login","authData","username","email","password","console","log","setItem","access","userRes","_err$response2","_err$response3","_err$response3$data","logout","updateProfile","put","_err$response4","_err$response4$data","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","displayName","context","$RefreshReg$"],"sources":["/home/yves/Test/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      // Check if token exists in local storage\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        // Set auth token header\n        setAuthToken(token);\n        \n        try {\n          // Verify token by getting user data\n          const res = await axios.get('/users/profile/');\n          setUser(res.data);\n          setIsAuthenticated(true);\n        } catch (err) {\n          // Token is invalid\n          localStorage.removeItem('token');\n          setAuthToken(null);\n          setUser(null);\n          setIsAuthenticated(false);\n          setError('Session expired. Please log in again.');\n        }\n      }\n      \n      setLoading(false);\n    };\n    \n    checkLoggedIn();\n  }, []);\n\n  // Set auth token for axios\n  const setAuthToken = (token) => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  };\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      const res = await axios.post('/users/register/', userData);\n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (userData) => {\n    try {\n      // Transform email to username for JWT authentication\n      const authData = {\n        username: userData.email, // Send email as username\n        password: userData.password\n      };\n      \n      console.log('Sending auth data:', authData);\n      \n      const res = await axios.post('/token/', authData);\n      \n      // Save token to local storage\n      localStorage.setItem('token', res.data.access);\n      \n      // Set auth token in headers\n      setAuthToken(res.data.access);\n      \n      // Get user data\n      const userRes = await axios.get('/users/profile/');\n      setUser(userRes.data);\n      setIsAuthenticated(true);\n      setError(null);\n      \n      return res.data;\n    } catch (err) {\n      console.error('Login error details:', err.response?.data);\n      setError(err.response?.data?.detail || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    // Remove token from local storage\n    localStorage.removeItem('token');\n    \n    // Remove auth token from headers\n    setAuthToken(null);\n    \n    // Reset state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      const res = await axios.put('/users/me/', userData);\n      setUser(res.data);\n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Profile update failed');\n      throw err;\n    }\n  };\n\n  // Clear errors\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        updateProfile,\n        clearError\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Export context for use in components\nAuthContext.displayName = 'AuthContext';\nAuthProvider.context = AuthContext;\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}