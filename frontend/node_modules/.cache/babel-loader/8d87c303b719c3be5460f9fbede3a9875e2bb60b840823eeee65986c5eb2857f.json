{"ast":null,"code":"var _jsxFileName = \"/home/yves/Test/frontend/src/pages/TakeQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TakeQuiz = () => {\n  _s();\n  var _quiz$questions, _quiz$questions2;\n  const {\n    quizId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const attemptId = queryParams.get('attempt');\n  const [quiz, setQuiz] = useState(null);\n  const [attempt, setAttempt] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [multipleChoiceAnswers, setMultipleChoiceAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n\n  // Fetch quiz details and create/get attempt\n  useEffect(() => {\n    const fetchQuizAndAttempt = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch quiz details\n        const quizResponse = await axios.get(`/quizzes/quizzes/${quizId}/`);\n        setQuiz(quizResponse.data);\n\n        // Get or create attempt\n        let attemptResponse;\n        if (attemptId) {\n          attemptResponse = await axios.get(`/quizzes/attempts/${attemptId}/`);\n        } else {\n          attemptResponse = await axios.post(`/quizzes/quizzes/${quizId}/start/`);\n        }\n        setAttempt(attemptResponse.data);\n\n        // Initialize time left if quiz has a time limit\n        if (quizResponse.data.time_limit) {\n          const startTime = new Date(attemptResponse.data.started_at);\n          const endTime = new Date(startTime.getTime() + quizResponse.data.time_limit * 60000);\n          const now = new Date();\n          const timeLeftMs = endTime - now;\n          if (timeLeftMs > 0) {\n            setTimeLeft(Math.floor(timeLeftMs / 1000));\n          } else {\n            // Time's up, submit the quiz\n            handleSubmitQuiz();\n          }\n        }\n\n        // Initialize answers from existing attempt answers\n        if (attemptResponse.data.answers && attemptResponse.data.answers.length > 0) {\n          const singleAnswerMap = {};\n          const multipleAnswerMap = {};\n          attemptResponse.data.answers.forEach(answer => {\n            if (answer.is_multiple_choice) {\n              // Pour les questions à choix multiples\n              multipleAnswerMap[answer.question] = answer.selected_choices_ids || [];\n            } else {\n              // Pour les questions à choix unique\n              singleAnswerMap[answer.question] = answer.selected_choice;\n            }\n          });\n          setAnswers(singleAnswerMap);\n          setMultipleChoiceAnswers(multipleAnswerMap);\n        }\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching quiz or attempt:', err);\n        setError('Failed to load quiz. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuizAndAttempt();\n  }, [quizId, attemptId]);\n\n  // Timer effect\n  useEffect(() => {\n    if (timeLeft === null || timeLeft <= 0) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          // Time's up, submit the quiz\n          handleSubmitQuiz();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  // Format time left as mm:ss\n  const formatTimeLeft = () => {\n    if (timeLeft === null) return '';\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Vérifier si une question est à choix multiples\n  const isMultipleChoiceQuestion = questionId => {\n    if (!quiz || !quiz.questions) return false;\n    const question = quiz.questions.find(q => q.id === questionId);\n    return question && question.is_multiple_choice;\n  };\n\n  // Gérer la sélection de réponse pour les questions à choix unique et multiples\n  const handleAnswerSelect = async (questionId, choiceId) => {\n    const isMultiple = isMultipleChoiceQuestion(questionId);\n    try {\n      if (isMultiple) {\n        // Pour les questions à choix multiples\n        const currentSelections = [...(multipleChoiceAnswers[questionId] || [])];\n        let newSelections;\n        if (currentSelections.includes(choiceId)) {\n          // Si le choix est déjà sélectionné, le désélectionner\n          newSelections = currentSelections.filter(id => id !== choiceId);\n        } else {\n          // Sinon, l'ajouter à la sélection\n          newSelections = [...currentSelections, choiceId];\n        }\n\n        // Mettre à jour l'état local\n        setMultipleChoiceAnswers(prev => ({\n          ...prev,\n          [questionId]: newSelections\n        }));\n\n        // Soumettre la réponse au backend\n        await axios.post(`/quizzes/attempts/${attempt.id}/submit_answer/`, {\n          question_id: questionId,\n          choice_ids: newSelections\n        });\n      } else {\n        // Pour les questions à choix unique\n        // Mettre à jour l'état local\n        setAnswers(prev => ({\n          ...prev,\n          [questionId]: choiceId\n        }));\n\n        // Soumettre la réponse au backend\n        await axios.post(`/quizzes/attempts/${attempt.id}/submit_answer/`, {\n          question_id: questionId,\n          choice_id: choiceId\n        });\n      }\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n      // Nous n'affichons pas d'erreur à l'utilisateur ici pour ne pas perturber le déroulement du quiz\n      // La réponse sera toujours enregistrée localement et soumise avec la soumission finale\n    }\n  };\n\n  // Vérifier si un choix est sélectionné\n  const isChoiceSelected = (questionId, choiceId) => {\n    const isMultiple = isMultipleChoiceQuestion(questionId);\n    if (isMultiple) {\n      return multipleChoiceAnswers[questionId] && multipleChoiceAnswers[questionId].includes(choiceId);\n    } else {\n      return answers[questionId] === choiceId;\n    }\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n  const handleSubmitQuiz = async () => {\n    if (submitting) return;\n    try {\n      setSubmitting(true);\n\n      // Submit the quiz\n      const response = await axios.post(`/quizzes/attempts/${attempt.id}/complete/`);\n\n      // Navigate to results page\n      navigate(`/quiz-results/${attempt.id}`);\n    } catch (err) {\n      console.error('Error submitting quiz:', err);\n      setError('Failed to submit quiz. Please try again.');\n      setSubmitting(false);\n    }\n  };\n\n  // Get current question\n  const currentQuestion = quiz === null || quiz === void 0 ? void 0 : (_quiz$questions = quiz.questions) === null || _quiz$questions === void 0 ? void 0 : _quiz$questions[currentQuestionIndex];\n\n  // Calculate progress percentage\n  const progressPercentage = quiz !== null && quiz !== void 0 && (_quiz$questions2 = quiz.questions) !== null && _quiz$questions2 !== void 0 && _quiz$questions2.length ? Math.round((currentQuestionIndex + 1) / quiz.questions.length * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this) : quiz && attempt && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-primary-700 text-white p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-xl font-bold\",\n              children: quiz.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white text-primary-800 px-3 py-1 rounded-md font-mono font-bold\",\n              children: formatTimeLeft()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 bg-primary-600 rounded-full h-2.5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white h-2.5 rounded-full\",\n              style: {\n                width: `${progressPercentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-sm text-primary-200\",\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", quiz.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-6\",\n            children: [currentQuestion.text, currentQuestion.is_multiple_choice && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-normal text-gray-600 block mt-1\",\n              children: \"(S\\xE9lectionnez toutes les r\\xE9ponses correctes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3 mb-8\",\n            children: currentQuestion.choices.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `border rounded-lg p-4 cursor-pointer transition-colors ${isChoiceSelected(currentQuestion.id, choice.id) ? 'border-primary-500 bg-primary-50' : 'border-gray-300 hover:border-primary-300'}`,\n              onClick: () => handleAnswerSelect(currentQuestion.id, choice.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [currentQuestion.is_multiple_choice ?\n                /*#__PURE__*/\n                // Checkbox pour les questions à choix multiples\n                _jsxDEV(\"div\", {\n                  className: `w-5 h-5 border flex items-center justify-center mr-3 ${isChoiceSelected(currentQuestion.id, choice.id) ? 'border-primary-500 bg-primary-500' : 'border-gray-400'}`,\n                  children: isChoiceSelected(currentQuestion.id, choice.id) && /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-3 h-3 text-white\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 20 20\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 31\n                }, this) :\n                /*#__PURE__*/\n                // Radio button pour les questions à choix unique\n                _jsxDEV(\"div\", {\n                  className: `w-5 h-5 rounded-full border flex items-center justify-center mr-3 ${isChoiceSelected(currentQuestion.id, choice.id) ? 'border-primary-500 bg-primary-500' : 'border-gray-400'}`,\n                  children: isChoiceSelected(currentQuestion.id, choice.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-2 h-2 rounded-full bg-white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: choice.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 27\n              }, this)\n            }, choice.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePreviousQuestion,\n              disabled: currentQuestionIndex === 0,\n              className: `px-4 py-2 rounded-md ${currentQuestionIndex === 0 ? 'bg-gray-200 text-gray-500 cursor-not-allowed' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 23\n            }, this), currentQuestionIndex < quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextQuestion,\n              className: \"bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmitQuiz,\n              disabled: submitting,\n              className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md\",\n              children: submitting ? 'Submitting...' : 'Submit Quiz'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 p-4 border-t border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(index),\n              className: `w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${index === currentQuestionIndex ? 'bg-primary-600 text-white' : answers[question.id] ? 'bg-primary-200 text-primary-800' : 'bg-white text-gray-700 border border-gray-300'}`,\n              children: index + 1\n            }, question.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(TakeQuiz, \"nowPlf6xQFXGjoaHg7VuHQdEoCs=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = TakeQuiz;\nexport default TakeQuiz;\nvar _c;\n$RefreshReg$(_c, \"TakeQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TakeQuiz","_s","_quiz$questions","_quiz$questions2","quizId","navigate","location","queryParams","URLSearchParams","search","attemptId","get","quiz","setQuiz","attempt","setAttempt","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","multipleChoiceAnswers","setMultipleChoiceAnswers","loading","setLoading","submitting","setSubmitting","error","setError","timeLeft","setTimeLeft","fetchQuizAndAttempt","quizResponse","data","attemptResponse","post","time_limit","startTime","Date","started_at","endTime","getTime","now","timeLeftMs","Math","floor","handleSubmitQuiz","length","singleAnswerMap","multipleAnswerMap","forEach","answer","is_multiple_choice","question","selected_choices_ids","selected_choice","err","console","timer","setInterval","prev","clearInterval","formatTimeLeft","minutes","seconds","toString","padStart","isMultipleChoiceQuestion","questionId","questions","find","q","id","handleAnswerSelect","choiceId","isMultiple","currentSelections","newSelections","includes","filter","question_id","choice_ids","choice_id","isChoiceSelected","handleNextQuestion","handlePreviousQuestion","response","currentQuestion","progressPercentage","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","style","width","text","choices","map","choice","onClick","fill","viewBox","d","disabled","index","_c","$RefreshReg$"],"sources":["/home/yves/Test/frontend/src/pages/TakeQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst TakeQuiz = () => {\n  const { quizId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const attemptId = queryParams.get('attempt');\n\n  const [quiz, setQuiz] = useState(null);\n  const [attempt, setAttempt] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [multipleChoiceAnswers, setMultipleChoiceAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n\n  // Fetch quiz details and create/get attempt\n  useEffect(() => {\n    const fetchQuizAndAttempt = async () => {\n      try {\n        setLoading(true);\n        \n        // Fetch quiz details\n        const quizResponse = await axios.get(`/quizzes/quizzes/${quizId}/`);\n        setQuiz(quizResponse.data);\n        \n        // Get or create attempt\n        let attemptResponse;\n        if (attemptId) {\n          attemptResponse = await axios.get(`/quizzes/attempts/${attemptId}/`);\n        } else {\n          attemptResponse = await axios.post(`/quizzes/quizzes/${quizId}/start/`);\n        }\n        \n        setAttempt(attemptResponse.data);\n        \n        // Initialize time left if quiz has a time limit\n        if (quizResponse.data.time_limit) {\n          const startTime = new Date(attemptResponse.data.started_at);\n          const endTime = new Date(startTime.getTime() + quizResponse.data.time_limit * 60000);\n          const now = new Date();\n          const timeLeftMs = endTime - now;\n          \n          if (timeLeftMs > 0) {\n            setTimeLeft(Math.floor(timeLeftMs / 1000));\n          } else {\n            // Time's up, submit the quiz\n            handleSubmitQuiz();\n          }\n        }\n        \n        // Initialize answers from existing attempt answers\n        if (attemptResponse.data.answers && attemptResponse.data.answers.length > 0) {\n          const singleAnswerMap = {};\n          const multipleAnswerMap = {};\n          \n          attemptResponse.data.answers.forEach(answer => {\n            if (answer.is_multiple_choice) {\n              // Pour les questions à choix multiples\n              multipleAnswerMap[answer.question] = answer.selected_choices_ids || [];\n            } else {\n              // Pour les questions à choix unique\n              singleAnswerMap[answer.question] = answer.selected_choice;\n            }\n          });\n          \n          setAnswers(singleAnswerMap);\n          setMultipleChoiceAnswers(multipleAnswerMap);\n        }\n        \n        setError(null);\n      } catch (err) {\n        console.error('Error fetching quiz or attempt:', err);\n        setError('Failed to load quiz. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuizAndAttempt();\n  }, [quizId, attemptId]);\n\n  // Timer effect\n  useEffect(() => {\n    if (timeLeft === null || timeLeft <= 0) return;\n    \n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          // Time's up, submit the quiz\n          handleSubmitQuiz();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  // Format time left as mm:ss\n  const formatTimeLeft = () => {\n    if (timeLeft === null) return '';\n    \n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Vérifier si une question est à choix multiples\n  const isMultipleChoiceQuestion = (questionId) => {\n    if (!quiz || !quiz.questions) return false;\n    const question = quiz.questions.find(q => q.id === questionId);\n    return question && question.is_multiple_choice;\n  };\n\n  // Gérer la sélection de réponse pour les questions à choix unique et multiples\n  const handleAnswerSelect = async (questionId, choiceId) => {\n    const isMultiple = isMultipleChoiceQuestion(questionId);\n    \n    try {\n      if (isMultiple) {\n        // Pour les questions à choix multiples\n        const currentSelections = [...(multipleChoiceAnswers[questionId] || [])];\n        let newSelections;\n        \n        if (currentSelections.includes(choiceId)) {\n          // Si le choix est déjà sélectionné, le désélectionner\n          newSelections = currentSelections.filter(id => id !== choiceId);\n        } else {\n          // Sinon, l'ajouter à la sélection\n          newSelections = [...currentSelections, choiceId];\n        }\n        \n        // Mettre à jour l'état local\n        setMultipleChoiceAnswers(prev => ({\n          ...prev,\n          [questionId]: newSelections\n        }));\n        \n        // Soumettre la réponse au backend\n        await axios.post(`/quizzes/attempts/${attempt.id}/submit_answer/`, {\n          question_id: questionId,\n          choice_ids: newSelections\n        });\n      } else {\n        // Pour les questions à choix unique\n        // Mettre à jour l'état local\n        setAnswers(prev => ({\n          ...prev,\n          [questionId]: choiceId\n        }));\n        \n        // Soumettre la réponse au backend\n        await axios.post(`/quizzes/attempts/${attempt.id}/submit_answer/`, {\n          question_id: questionId,\n          choice_id: choiceId\n        });\n      }\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n      // Nous n'affichons pas d'erreur à l'utilisateur ici pour ne pas perturber le déroulement du quiz\n      // La réponse sera toujours enregistrée localement et soumise avec la soumission finale\n    }\n  };\n  \n  // Vérifier si un choix est sélectionné\n  const isChoiceSelected = (questionId, choiceId) => {\n    const isMultiple = isMultipleChoiceQuestion(questionId);\n    \n    if (isMultiple) {\n      return multipleChoiceAnswers[questionId] && multipleChoiceAnswers[questionId].includes(choiceId);\n    } else {\n      return answers[questionId] === choiceId;\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n\n  const handleSubmitQuiz = async () => {\n    if (submitting) return;\n    \n    try {\n      setSubmitting(true);\n      \n      // Submit the quiz\n      const response = await axios.post(`/quizzes/attempts/${attempt.id}/complete/`);\n      \n      // Navigate to results page\n      navigate(`/quiz-results/${attempt.id}`);\n    } catch (err) {\n      console.error('Error submitting quiz:', err);\n      setError('Failed to submit quiz. Please try again.');\n      setSubmitting(false);\n    }\n  };\n\n  // Get current question\n  const currentQuestion = quiz?.questions?.[currentQuestionIndex];\n\n  // Calculate progress percentage\n  const progressPercentage = quiz?.questions?.length \n    ? Math.round(((currentQuestionIndex + 1) / quiz.questions.length) * 100) \n    : 0;\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      {/* Loading state */}\n      {loading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n        </div>\n      ) : (\n        <>\n          {/* Error message */}\n          {error ? (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n              {error}\n            </div>\n          ) : (\n            quiz && attempt && (\n              <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                {/* Quiz header */}\n                <div className=\"bg-primary-700 text-white p-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <h1 className=\"text-xl font-bold\">{quiz.title}</h1>\n                    {timeLeft !== null && (\n                      <div className=\"bg-white text-primary-800 px-3 py-1 rounded-md font-mono font-bold\">\n                        {formatTimeLeft()}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Progress bar */}\n                  <div className=\"mt-4 bg-primary-600 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-white h-2.5 rounded-full\" \n                      style={{ width: `${progressPercentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"mt-1 text-sm text-primary-200\">\n                    Question {currentQuestionIndex + 1} of {quiz.questions.length}\n                  </div>\n                </div>\n                \n                {/* Question content */}\n                {currentQuestion && (\n                  <div className=\"p-6\">\n                    <h2 className=\"text-xl font-semibold mb-6\">\n                      {currentQuestion.text}\n                      {currentQuestion.is_multiple_choice && (\n                        <span className=\"text-sm font-normal text-gray-600 block mt-1\">\n                          (Sélectionnez toutes les réponses correctes)\n                        </span>\n                      )}\n                    </h2>\n                    \n                    {/* Answer choices */}\n                    <div className=\"space-y-3 mb-8\">\n                      {currentQuestion.choices.map(choice => (\n                        <div \n                          key={choice.id}\n                          className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                            isChoiceSelected(currentQuestion.id, choice.id)\n                              ? 'border-primary-500 bg-primary-50'\n                              : 'border-gray-300 hover:border-primary-300'\n                          }`}\n                          onClick={() => handleAnswerSelect(currentQuestion.id, choice.id)}\n                        >\n                          <div className=\"flex items-center\">\n                            {currentQuestion.is_multiple_choice ? (\n                              // Checkbox pour les questions à choix multiples\n                              <div className={`w-5 h-5 border flex items-center justify-center mr-3 ${\n                                isChoiceSelected(currentQuestion.id, choice.id)\n                                  ? 'border-primary-500 bg-primary-500'\n                                  : 'border-gray-400'\n                              }`}>\n                                {isChoiceSelected(currentQuestion.id, choice.id) && (\n                                  <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                    <path d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" />\n                                  </svg>\n                                )}\n                              </div>\n                            ) : (\n                              // Radio button pour les questions à choix unique\n                              <div className={`w-5 h-5 rounded-full border flex items-center justify-center mr-3 ${\n                                isChoiceSelected(currentQuestion.id, choice.id)\n                                  ? 'border-primary-500 bg-primary-500'\n                                  : 'border-gray-400'\n                              }`}>\n                                {isChoiceSelected(currentQuestion.id, choice.id) && (\n                                  <div className=\"w-2 h-2 rounded-full bg-white\"></div>\n                                )}\n                              </div>\n                            )}\n                            <span>{choice.text}</span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    \n                    {/* Navigation buttons */}\n                    <div className=\"flex justify-between\">\n                      <button\n                        onClick={handlePreviousQuestion}\n                        disabled={currentQuestionIndex === 0}\n                        className={`px-4 py-2 rounded-md ${\n                          currentQuestionIndex === 0\n                            ? 'bg-gray-200 text-gray-500 cursor-not-allowed'\n                            : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n                        }`}\n                      >\n                        Previous\n                      </button>\n                      \n                      {currentQuestionIndex < quiz.questions.length - 1 ? (\n                        <button\n                          onClick={handleNextQuestion}\n                          className=\"bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md\"\n                        >\n                          Next\n                        </button>\n                      ) : (\n                        <button\n                          onClick={handleSubmitQuiz}\n                          disabled={submitting}\n                          className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md\"\n                        >\n                          {submitting ? 'Submitting...' : 'Submit Quiz'}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                )}\n                \n                {/* Question navigation */}\n                <div className=\"bg-gray-100 p-4 border-t border-gray-200\">\n                  <div className=\"flex flex-wrap gap-2\">\n                    {quiz.questions.map((question, index) => (\n                      <button\n                        key={question.id}\n                        onClick={() => setCurrentQuestionIndex(index)}\n                        className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                          index === currentQuestionIndex\n                            ? 'bg-primary-600 text-white'\n                            : answers[question.id]\n                              ? 'bg-primary-200 text-primary-800'\n                              : 'bg-white text-gray-700 border border-gray-300'\n                        }`}\n                      >\n                        {index + 1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TakeQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}