{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate,useLocation}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TakeQuiz=()=>{var _quiz$questions,_quiz$questions2;const{quizId}=useParams();const navigate=useNavigate();const location=useLocation();const queryParams=new URLSearchParams(location.search);const attemptId=queryParams.get('attempt');const[quiz,setQuiz]=useState(null);const[attempt,setAttempt]=useState(null);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState({});const[loading,setLoading]=useState(true);const[submitting,setSubmitting]=useState(false);const[error,setError]=useState(null);const[timeLeft,setTimeLeft]=useState(null);// Fetch quiz details and create/get attempt\nuseEffect(()=>{const fetchQuizAndAttempt=async()=>{try{setLoading(true);// Fetch quiz details\nconst quizResponse=await axios.get(`/quizzes/quizzes/${quizId}/`);setQuiz(quizResponse.data);// Get or create attempt\nlet attemptResponse;if(attemptId){attemptResponse=await axios.get(`/quizzes/attempts/${attemptId}/`);}else{attemptResponse=await axios.post(`/quizzes/quizzes/${quizId}/start/`);}setAttempt(attemptResponse.data);// Initialize time left if quiz has a time limit\nif(quizResponse.data.time_limit){const startTime=new Date(attemptResponse.data.started_at);const endTime=new Date(startTime.getTime()+quizResponse.data.time_limit*60000);const now=new Date();const timeLeftMs=endTime-now;if(timeLeftMs>0){setTimeLeft(Math.floor(timeLeftMs/1000));}else{// Time's up, submit the quiz\nhandleSubmitQuiz();}}// Initialize answers from existing attempt answers\nif(attemptResponse.data.answers&&attemptResponse.data.answers.length>0){const answerMap={};attemptResponse.data.answers.forEach(answer=>{answerMap[answer.question]=answer.selected_choice;});setAnswers(answerMap);}setError(null);}catch(err){console.error('Error fetching quiz or attempt:',err);setError('Failed to load quiz. Please try again later.');}finally{setLoading(false);}};fetchQuizAndAttempt();},[quizId,attemptId]);// Timer effect\nuseEffect(()=>{if(timeLeft===null||timeLeft<=0)return;const timer=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){clearInterval(timer);// Time's up, submit the quiz\nhandleSubmitQuiz();return 0;}return prev-1;});},1000);return()=>clearInterval(timer);},[timeLeft]);// Format time left as mm:ss\nconst formatTimeLeft=()=>{if(timeLeft===null)return'';const minutes=Math.floor(timeLeft/60);const seconds=timeLeft%60;return`${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;};const handleAnswerSelect=async(questionId,choiceId)=>{// Update local state\nsetAnswers(prev=>({...prev,[questionId]:choiceId}));try{// Submit answer to backend\nawait axios.post(`/quizzes/attempts/${attempt.id}/submit_answer/`,{question_id:questionId,choice_id:choiceId});}catch(err){console.error('Error submitting answer:',err);// We don't show an error to the user here to avoid disrupting the quiz flow\n// The answer will still be saved locally and submitted with the final submission\n}};const handleNextQuestion=()=>{if(currentQuestionIndex<quiz.questions.length-1){setCurrentQuestionIndex(prev=>prev+1);}};const handlePreviousQuestion=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(prev=>prev-1);}};const handleSubmitQuiz=async()=>{if(submitting)return;try{setSubmitting(true);// Submit the quiz\nconst response=await axios.post(`/quizzes/attempts/${attempt.id}/complete/`);// Navigate to results page\nnavigate(`/quiz-results/${attempt.id}`);}catch(err){console.error('Error submitting quiz:',err);setError('Failed to submit quiz. Please try again.');setSubmitting(false);}};// Get current question\nconst currentQuestion=quiz===null||quiz===void 0?void 0:(_quiz$questions=quiz.questions)===null||_quiz$questions===void 0?void 0:_quiz$questions[currentQuestionIndex];// Calculate progress percentage\nconst progressPercentage=quiz!==null&&quiz!==void 0&&(_quiz$questions2=quiz.questions)!==null&&_quiz$questions2!==void 0&&_quiz$questions2.length?Math.round((currentQuestionIndex+1)/quiz.questions.length*100):0;return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"})}):/*#__PURE__*/_jsx(_Fragment,{children:error?/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",children:error}):quiz&&attempt&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-primary-700 text-white p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold\",children:quiz.title}),timeLeft!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white text-primary-800 px-3 py-1 rounded-md font-mono font-bold\",children:formatTimeLeft()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 bg-primary-600 rounded-full h-2.5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white h-2.5 rounded-full\",style:{width:`${progressPercentage}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-primary-200\",children:[\"Question \",currentQuestionIndex+1,\" of \",quiz.questions.length]})]}),currentQuestion&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-6\",children:currentQuestion.text}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 mb-8\",children:currentQuestion.choices.map(choice=>/*#__PURE__*/_jsx(\"div\",{className:`border rounded-lg p-4 cursor-pointer transition-colors ${answers[currentQuestion.id]===choice.id?'border-primary-500 bg-primary-50':'border-gray-300 hover:border-primary-300'}`,onClick:()=>handleAnswerSelect(currentQuestion.id,choice.id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:`w-5 h-5 rounded-full border flex items-center justify-center mr-3 ${answers[currentQuestion.id]===choice.id?'border-primary-500 bg-primary-500':'border-gray-400'}`,children:answers[currentQuestion.id]===choice.id&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full bg-white\"})}),/*#__PURE__*/_jsx(\"span\",{children:choice.text})]})},choice.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviousQuestion,disabled:currentQuestionIndex===0,className:`px-4 py-2 rounded-md ${currentQuestionIndex===0?'bg-gray-200 text-gray-500 cursor-not-allowed':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Previous\"}),currentQuestionIndex<quiz.questions.length-1?/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,className:\"bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md\",children:\"Next\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitQuiz,disabled:submitting,className:\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md\",children:submitting?'Submitting...':'Submit Quiz'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 p-4 border-t border-gray-200\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:quiz.questions.map((question,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentQuestionIndex(index),className:`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${index===currentQuestionIndex?'bg-primary-600 text-white':answers[question.id]?'bg-primary-200 text-primary-800':'bg-white text-gray-700 border border-gray-300'}`,children:index+1},question.id))})})]})})});};export default TakeQuiz;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TakeQuiz","_quiz$questions","_quiz$questions2","quizId","navigate","location","queryParams","URLSearchParams","search","attemptId","get","quiz","setQuiz","attempt","setAttempt","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","loading","setLoading","submitting","setSubmitting","error","setError","timeLeft","setTimeLeft","fetchQuizAndAttempt","quizResponse","data","attemptResponse","post","time_limit","startTime","Date","started_at","endTime","getTime","now","timeLeftMs","Math","floor","handleSubmitQuiz","length","answerMap","forEach","answer","question","selected_choice","err","console","timer","setInterval","prev","clearInterval","formatTimeLeft","minutes","seconds","toString","padStart","handleAnswerSelect","questionId","choiceId","id","question_id","choice_id","handleNextQuestion","questions","handlePreviousQuestion","response","currentQuestion","progressPercentage","round","className","children","title","style","width","text","choices","map","choice","onClick","disabled","index"],"sources":["/home/yves/Test/frontend/src/pages/TakeQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst TakeQuiz = () => {\n  const { quizId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const attemptId = queryParams.get('attempt');\n\n  const [quiz, setQuiz] = useState(null);\n  const [attempt, setAttempt] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n\n  // Fetch quiz details and create/get attempt\n  useEffect(() => {\n    const fetchQuizAndAttempt = async () => {\n      try {\n        setLoading(true);\n        \n        // Fetch quiz details\n        const quizResponse = await axios.get(`/quizzes/quizzes/${quizId}/`);\n        setQuiz(quizResponse.data);\n        \n        // Get or create attempt\n        let attemptResponse;\n        if (attemptId) {\n          attemptResponse = await axios.get(`/quizzes/attempts/${attemptId}/`);\n        } else {\n          attemptResponse = await axios.post(`/quizzes/quizzes/${quizId}/start/`);\n        }\n        \n        setAttempt(attemptResponse.data);\n        \n        // Initialize time left if quiz has a time limit\n        if (quizResponse.data.time_limit) {\n          const startTime = new Date(attemptResponse.data.started_at);\n          const endTime = new Date(startTime.getTime() + quizResponse.data.time_limit * 60000);\n          const now = new Date();\n          const timeLeftMs = endTime - now;\n          \n          if (timeLeftMs > 0) {\n            setTimeLeft(Math.floor(timeLeftMs / 1000));\n          } else {\n            // Time's up, submit the quiz\n            handleSubmitQuiz();\n          }\n        }\n        \n        // Initialize answers from existing attempt answers\n        if (attemptResponse.data.answers && attemptResponse.data.answers.length > 0) {\n          const answerMap = {};\n          attemptResponse.data.answers.forEach(answer => {\n            answerMap[answer.question] = answer.selected_choice;\n          });\n          setAnswers(answerMap);\n        }\n        \n        setError(null);\n      } catch (err) {\n        console.error('Error fetching quiz or attempt:', err);\n        setError('Failed to load quiz. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuizAndAttempt();\n  }, [quizId, attemptId]);\n\n  // Timer effect\n  useEffect(() => {\n    if (timeLeft === null || timeLeft <= 0) return;\n    \n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          // Time's up, submit the quiz\n          handleSubmitQuiz();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  // Format time left as mm:ss\n  const formatTimeLeft = () => {\n    if (timeLeft === null) return '';\n    \n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const handleAnswerSelect = async (questionId, choiceId) => {\n    // Update local state\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: choiceId\n    }));\n    \n    try {\n      // Submit answer to backend\n      await axios.post(`/quizzes/attempts/${attempt.id}/submit_answer/`, {\n        question_id: questionId,\n        choice_id: choiceId\n      });\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n      // We don't show an error to the user here to avoid disrupting the quiz flow\n      // The answer will still be saved locally and submitted with the final submission\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n\n  const handleSubmitQuiz = async () => {\n    if (submitting) return;\n    \n    try {\n      setSubmitting(true);\n      \n      // Submit the quiz\n      const response = await axios.post(`/quizzes/attempts/${attempt.id}/complete/`);\n      \n      // Navigate to results page\n      navigate(`/quiz-results/${attempt.id}`);\n    } catch (err) {\n      console.error('Error submitting quiz:', err);\n      setError('Failed to submit quiz. Please try again.');\n      setSubmitting(false);\n    }\n  };\n\n  // Get current question\n  const currentQuestion = quiz?.questions?.[currentQuestionIndex];\n\n  // Calculate progress percentage\n  const progressPercentage = quiz?.questions?.length \n    ? Math.round(((currentQuestionIndex + 1) / quiz.questions.length) * 100) \n    : 0;\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      {/* Loading state */}\n      {loading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n        </div>\n      ) : (\n        <>\n          {/* Error message */}\n          {error ? (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n              {error}\n            </div>\n          ) : (\n            quiz && attempt && (\n              <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                {/* Quiz header */}\n                <div className=\"bg-primary-700 text-white p-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <h1 className=\"text-xl font-bold\">{quiz.title}</h1>\n                    {timeLeft !== null && (\n                      <div className=\"bg-white text-primary-800 px-3 py-1 rounded-md font-mono font-bold\">\n                        {formatTimeLeft()}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Progress bar */}\n                  <div className=\"mt-4 bg-primary-600 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-white h-2.5 rounded-full\" \n                      style={{ width: `${progressPercentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"mt-1 text-sm text-primary-200\">\n                    Question {currentQuestionIndex + 1} of {quiz.questions.length}\n                  </div>\n                </div>\n                \n                {/* Question content */}\n                {currentQuestion && (\n                  <div className=\"p-6\">\n                    <h2 className=\"text-xl font-semibold mb-6\">{currentQuestion.text}</h2>\n                    \n                    {/* Answer choices */}\n                    <div className=\"space-y-3 mb-8\">\n                      {currentQuestion.choices.map(choice => (\n                        <div \n                          key={choice.id}\n                          className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                            answers[currentQuestion.id] === choice.id\n                              ? 'border-primary-500 bg-primary-50'\n                              : 'border-gray-300 hover:border-primary-300'\n                          }`}\n                          onClick={() => handleAnswerSelect(currentQuestion.id, choice.id)}\n                        >\n                          <div className=\"flex items-center\">\n                            <div className={`w-5 h-5 rounded-full border flex items-center justify-center mr-3 ${\n                              answers[currentQuestion.id] === choice.id\n                                ? 'border-primary-500 bg-primary-500'\n                                : 'border-gray-400'\n                            }`}>\n                              {answers[currentQuestion.id] === choice.id && (\n                                <div className=\"w-2 h-2 rounded-full bg-white\"></div>\n                              )}\n                            </div>\n                            <span>{choice.text}</span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    \n                    {/* Navigation buttons */}\n                    <div className=\"flex justify-between\">\n                      <button\n                        onClick={handlePreviousQuestion}\n                        disabled={currentQuestionIndex === 0}\n                        className={`px-4 py-2 rounded-md ${\n                          currentQuestionIndex === 0\n                            ? 'bg-gray-200 text-gray-500 cursor-not-allowed'\n                            : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n                        }`}\n                      >\n                        Previous\n                      </button>\n                      \n                      {currentQuestionIndex < quiz.questions.length - 1 ? (\n                        <button\n                          onClick={handleNextQuestion}\n                          className=\"bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md\"\n                        >\n                          Next\n                        </button>\n                      ) : (\n                        <button\n                          onClick={handleSubmitQuiz}\n                          disabled={submitting}\n                          className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md\"\n                        >\n                          {submitting ? 'Submitting...' : 'Submit Quiz'}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                )}\n                \n                {/* Question navigation */}\n                <div className=\"bg-gray-100 p-4 border-t border-gray-200\">\n                  <div className=\"flex flex-wrap gap-2\">\n                    {quiz.questions.map((question, index) => (\n                      <button\n                        key={question.id}\n                        onClick={() => setCurrentQuestionIndex(index)}\n                        className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                          index === currentQuestionIndex\n                            ? 'bg-primary-600 text-white'\n                            : answers[question.id]\n                              ? 'bg-primary-200 text-primary-800'\n                              : 'bg-white text-gray-700 border border-gray-300'\n                        }`}\n                      >\n                        {index + 1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TakeQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}